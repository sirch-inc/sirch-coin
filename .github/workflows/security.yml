# GitHub Actions workflow for security scanning
# Runs dependency reviews, vulnerability scans, and security audits
# 
# Artifact Retention: Security results (14d)
# See: CICD_ARTIFACT_RETENTION_POLICY.md for complete retention strategy

name: Security Scan

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
  
  pull_request:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'

# Add concurrency control to cancel previous runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  SOURCE_BRANCH: ${{ github.head_ref || github.ref_name }}
  NODE_OPTIONS: "--max-old-space-size=4096"

permissions:
  id-token: write  # For OIDC
  contents: read
  pull-requests: write
  checks: write
  security-events: write  # For SARIF upload
  actions: read  # For dependency review

jobs:
  security:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    # Allow skipping CI with commit message
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]') }}
    
    outputs:
      security-status: ${{ steps.security-summary.outputs.status }}
    
    steps:
      ############################################################
      # Startup steps
      ############################################################

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN_FOR_GITHUB_ACTIONS }}
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Node.js and Dependencies
        uses: ./.github/actions/setup
        with:
          cache-key-suffix: security
          additional-cache-paths: |
            ~/.cache/trivy

      ############################################################
      # Security scanning steps
      ############################################################

      - name: Dependency Review with enhanced security
        uses: actions/dependency-review-action@v4
        if: github.event_name == 'pull_request'
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, 0BSD, Unlicense
          comment-summary-in-pr: always
          fail-on-scopes: runtime, development

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          scanners: 'vuln,secret,config'
          timeout: '10m'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v4
        if: always() && hashFiles('trivy-results.sarif') != ''
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v4
        if: github.event_name == 'pull_request'
        with:
          languages: javascript
          config-file: ./.github/codeql/codeql-config.yml
        continue-on-error: true

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v4
        if: github.event_name == 'pull_request'
        with:
          category: "/language:javascript"
        continue-on-error: true

      - name: Run NPM security audit
        id: security
        run: |
          echo "Running comprehensive npm security audit..."
          npm audit --audit-level=moderate --json > audit-results.json || true
          echo "Audit results:"
          cat audit-results.json | jq -r '.vulnerabilities | to_entries[] | select(.value.severity == "high" or .value.severity == "critical") | "\(.key): \(.value.severity)"' || echo "No high/critical vulnerabilities found"
        continue-on-error: true

      - name: Create security check status
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const { context, github } = require('@actions/core');
            
            // Create security check status
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Security Scan Results',
              head_sha: context.payload.pull_request.head.sha,
              status: 'completed',
              conclusion: '${{ steps.security.outcome }}' === 'success' ? 'success' : 'failure',
              output: {
                title: 'Security Scan Summary',
                summary: 'Dependency review, vulnerability scanning, and security audit completed'
              }
            });

      - name: Security summary
        id: security-summary
        run: |
          if [[ "${{ steps.security.outcome }}" == "success" ]]; then
            echo "status=success" >> "$GITHUB_OUTPUT"
            echo "✅ All security checks passed"
          else
            echo "status=failure" >> "$GITHUB_OUTPUT"
            echo "❌ Security issues found - check audit results"
          fi

      - name: Upload security scan results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-results-${{ github.sha }}
          path: |
            trivy-results.sarif
            audit-results.json
          retention-days: 14
          if-no-files-found: warn

      - name: Update security job summary
        if: always()
        run: |
          echo "# 🛡️ Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          DEP_REVIEW_STATUS="${{ github.event_name == 'pull_request' && '✅ Completed' || '⏭️ Skipped (push to main)' }}"
          TRIVY_STATUS="${{ hashFiles('trivy-results.sarif') != '' && '✅ Completed' || '❌ Failed' }}"
          CODEQL_STATUS="${{ github.event_name == 'pull_request' && '✅ Completed' || '⏭️ Skipped (push to main)' }}"
          AUDIT_STATUS="${{ steps.security.outcome == 'success' && '✅ Passed' || '❌ Issues Found' }}"
          
          echo "| Security Check | Status | Action |" >> $GITHUB_STEP_SUMMARY
          echo "|----------------|--------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🔍 Dependency Review | $DEP_REVIEW_STATUS | Review PR dependencies |" >> $GITHUB_STEP_SUMMARY
          echo "| 🛡️ Trivy Scanner | $TRIVY_STATUS | \`trivy fs .\` |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔬 CodeQL Analysis | $CODEQL_STATUS | Static analysis |" >> $GITHUB_STEP_SUMMARY
          echo "| 🚨 NPM Audit | $AUDIT_STATUS | \`npm audit fix\` |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.security-summary.outputs.status }}" == "success" ]]; then
            echo "🎉 **All security checks passed!** Your code is secure." >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Security issues detected.** Review the audit results and fix vulnerabilities." >> $GITHUB_STEP_SUMMARY
          fi