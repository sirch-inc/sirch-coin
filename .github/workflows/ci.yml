# A GitHub Actions workflow for CI (run tests, create preview deploys, etc.)
# This workflow runs on PRs to main and direct pushes to main (for emergency fixes).
#
# Artifact Retention: CI builds (7d), Test results (14d), Preview logs (14d)
# See: CICD_ARTIFACT_RETENTION_POLICY.md for complete retention strategy
#
# This workflow has been refactored into modular composite actions for maintainability.
# See .github/actions/ directory for the individual action implementations.

name: CI

on:
  # Run on pushes to main (for direct commits/emergency fixes)
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
  
  # Run on all PRs to main (your primary workflow)
  pull_request:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'

# Add concurrency control to cancel previous runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  SOURCE_BRANCH: ${{ github.head_ref || github.ref_name }}
  NODE_OPTIONS: "--max-old-space-size=4096"

permissions:
  id-token: write  # For OIDC
  contents: read
  pull-requests: write
  checks: write
  security-events: write  # For SARIF upload
  actions: read  # For dependency review

jobs:
  security:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN_FOR_GITHUB_ACTIONS }}
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node
        with:
          cache-key-suffix: 'security'

      - name: Run security scans
        uses: ./.github/actions/security-scan

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN_FOR_GITHUB_ACTIONS }}
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node
        with:
          cache-key-suffix: 'test'

      - name: Run tests and quality checks
        uses: ./.github/actions/run-tests
        id: test-results

      - name: Record detailed workflow metrics
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const { context, github } = require('@actions/github');
            
            // Record workflow execution metrics
            const metrics = {
              workflow: 'ci',
              job: 'test',
              conclusion: '${{ job.status }}',
              startTime: '${{ github.event.repository.pushed_at }}',
              duration: Date.now() - new Date('${{ github.event.repository.pushed_at }}').getTime(),
              lintResult: '${{ steps.test-results.outputs.lint-result }}',
              typescriptResult: '${{ steps.test-results.outputs.typescript-result }}',
              testsResult: '${{ steps.test-results.outputs.tests-result }}',
              coverageStatus: '${{ steps.test-results.outputs.coverage-status }}',
              sha: '${{ github.sha }}',
              ref: '${{ github.ref }}',
              actor: '${{ github.actor }}'
            };
            
            console.log('Test job metrics:', JSON.stringify(metrics, null, 2));

  build-deploy:
    needs: [security, test]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]') }}
    environment: 
      name: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'production' || 'preview' }}
      url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN_FOR_GITHUB_ACTIONS }}
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node
        with:
          cache-key-suffix: 'build'

      - name: Build and analyze application
        uses: ./.github/actions/build-and-analyze
        with:
          supabase-url: ${{ secrets.VITE_SUPABASE_PROJECT_URL_TEST }}
          supabase-key: ${{ secrets.VITE_SUPABASE_ANON_KEY_TEST }}
          stripe-key: ${{ secrets.VITE_STRIPE_API_PUBLISHABLE_KEY_TEST }}

      - name: Deploy preview (PR only)
        if: github.event_name == 'pull_request'
        uses: ./.github/actions/deploy-preview
        id: deploy
        with:
          netlify-site-id: ${{ secrets.NETLIFY_SITE_ID_TEST }}
          netlify-auth-token: ${{ secrets.NETLIFY_API_TOKEN_TEST }}

      - name: Create comprehensive workflow summary
        if: always()
        run: |
          echo "# 🎯 CI Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📋 Job Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          SECURITY_STATUS="${{ needs.security.result == 'success' && '✅ Passed' || '❌ Failed' }}"
          TEST_STATUS="${{ needs.test.result == 'success' && '✅ Passed' || '❌ Failed' }}"
          BUILD_STATUS="${{ job.status == 'success' && '✅ Passed' || '❌ Failed' }}"
          
          echo "| Job | Status | Duration |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|----------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🔒 Security Scan | $SECURITY_STATUS | ~5min |" >> $GITHUB_STEP_SUMMARY
          echo "| 🧪 Test & Quality | $TEST_STATUS | ~10min |" >> $GITHUB_STEP_SUMMARY
          echo "| 🏗️ Build & Deploy | $BUILD_STATUS | ~10min |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ job.status }}" == "success" && "${{ needs.security.result }}" == "success" && "${{ needs.test.result }}" == "success" ]]; then
            echo "🎉 **All checks passed!** " >> $GITHUB_STEP_SUMMARY
            if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              echo "Your PR is ready for review." >> $GITHUB_STEP_SUMMARY
              if [[ -n "${{ steps.deploy.outputs.preview-url }}" ]]; then
                echo "📱 **Preview**: [${{ steps.deploy.outputs.preview-url }}](${{ steps.deploy.outputs.preview-url }})" >> $GITHUB_STEP_SUMMARY
              fi
            else
              echo "Main branch build completed successfully." >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⚠️ **Some checks failed.** Please review the job details above." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "🔧 **Workflow Info**: Refactored with modular composite actions" >> $GITHUB_STEP_SUMMARY
          echo "📚 **Actions Used**: setup-node, security-scan, run-tests, build-and-analyze, deploy-preview" >> $GITHUB_STEP_SUMMARY
          echo "⏱️ **Completed**: $(date -u)" >> $GITHUB_STEP_SUMMARY

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.sha }}
          path: |
            dist/
            bundle-size-report.md
            lighthouse-report.md
            performance-*.md
            performance-*.json
          retention-days: 7

      - name: Upload build logs and metadata (on failure)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: build-failure-logs-${{ github.sha }}
          path: |
            npm-debug.log*
            yarn-error.log*
            .vite/build-*.log
            deploy_output_*.json
          retention-days: 14
          if-no-files-found: ignore