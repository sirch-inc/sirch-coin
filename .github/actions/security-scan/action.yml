name: 'Security Scanning'
description: 'Runs comprehensive security scans including Trivy, dependency review, and npm audit'
outputs:
  security-status:
    description: 'Overall security scan status'
    value: ${{ steps.security-summary.outputs.status }}
runs:
  using: 'composite'
  steps:
    - name: Dependency Review with enhanced security
      uses: actions/dependency-review-action@v4
      if: github.event_name == 'pull_request'
      with:
        fail-on-severity: moderate
        allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, 0BSD, Unlicense
        comment-summary-in-pr: always
        fail-on-scopes: runtime, development

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        scanners: 'vuln,secret,config'
        timeout: '10m'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v4
      if: always() && hashFiles('trivy-results.sarif') != ''
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      if: github.event_name == 'pull_request'
      with:
        languages: javascript
        config-file: ./.github/codeql/codeql-config.yml
      continue-on-error: true

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4
      if: github.event_name == 'pull_request'
      with:
        category: "/language:javascript"
      continue-on-error: true

    - name: Run NPM security audit
      id: security
      shell: bash
      run: |
        echo "Running comprehensive npm security audit..."
        npm audit --audit-level=moderate --json > audit-results.json || true
        echo "Audit results:"
        cat audit-results.json | jq -r '.vulnerabilities | to_entries[] | select(.value.severity == "high" or .value.severity == "critical") | "\(.key): \(.value.severity)"' || echo "No high/critical vulnerabilities found"
      continue-on-error: true

    - name: Create security check status
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const { context, github } = require('@actions/github');
          
          await github.rest.checks.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: 'Security Scan Results',
            head_sha: context.payload.pull_request?.head?.sha || context.sha,
            status: 'completed',
            conclusion: '${{ steps.security.outcome }}' === 'success' ? 'success' : 'failure',
            output: {
              title: 'Security Analysis Complete',
              summary: 'Comprehensive security scanning including dependency review, Trivy, and npm audit completed.',
              text: '${{ steps.security.outcome }}' === 'success' ? 
                '✅ All security checks passed successfully' : 
                '⚠️ Security issues detected - please review the logs'
            }
          });

    - name: Security summary
      id: security-summary
      shell: bash
      run: |
        if [ "${{ steps.security.outcome }}" == "success" ]; then
          echo "status=success" >> "$GITHUB_OUTPUT"
        else
          echo "status=failure" >> "$GITHUB_OUTPUT"
        fi

    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-results-${{ github.sha }}
        path: |
          trivy-results.sarif
          audit-results.json
        retention-days: 14
        if-no-files-found: warn