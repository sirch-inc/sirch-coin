name: 'Setup Node.js Environment'
description: 'Sets up Node.js with caching and dependency installation'
inputs:
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '20'
  cache-key-suffix:
    description: 'Suffix for cache key to differentiate between jobs'
    required: true
outputs:
  cache-hit:
    description: 'Whether the cache was hit'
    value: ${{ steps.node-cache.outputs.cache-hit }}
runs:
  using: 'composite'
  steps:
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    
    - name: Cache dependencies and build outputs
      uses: actions/cache@v4
      id: node-cache
      with:
        path: |
          ~/.npm
          node_modules
          dist
          node_modules/.vite
          .eslintcache
          tsconfig.tsbuildinfo
          coverage
        key: ${{ runner.os }}-vite-${{ inputs.cache-key-suffix }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('src/**/*.[jt]s?(x)', 'vite.config.*', 'tsconfig.*', 'tailwind.config.*', 'index.html') }}
        restore-keys: |
          ${{ runner.os }}-vite-${{ inputs.cache-key-suffix }}-${{ hashFiles('**/package-lock.json') }}-
          ${{ runner.os }}-vite-${{ inputs.cache-key-suffix }}-
    
    - name: Report cache status
      shell: bash
      run: |
        if [ "${{ steps.node-cache.outputs.cache-hit }}" == "true" ]; then
          echo "✅ Cache hit - dependencies and build outputs restored"
        else
          echo "❌ Cache miss - will install fresh dependencies"
        fi
    
    - name: Install dependencies
      shell: bash
      run: npm ci